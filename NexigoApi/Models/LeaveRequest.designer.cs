#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NexigoApi.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LeaveProject")]
	public partial class LeaveRequestDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDivision(Division instance);
    partial void UpdateDivision(Division instance);
    partial void DeleteDivision(Division instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertHoliday(Holiday instance);
    partial void UpdateHoliday(Holiday instance);
    partial void DeleteHoliday(Holiday instance);
    partial void InsertLeave(Leave instance);
    partial void UpdateLeave(Leave instance);
    partial void DeleteLeave(Leave instance);
    partial void InsertLeaveReport(LeaveReport instance);
    partial void UpdateLeaveReport(LeaveReport instance);
    partial void DeleteLeaveReport(LeaveReport instance);
    partial void InsertLocation(Location instance);
    partial void UpdateLocation(Location instance);
    partial void DeleteLocation(Location instance);
    partial void InsertUnit(Unit instance);
    partial void UpdateUnit(Unit instance);
    partial void DeleteUnit(Unit instance);
    partial void InsertcommentHistory(commentHistory instance);
    partial void UpdatecommentHistory(commentHistory instance);
    partial void DeletecommentHistory(commentHistory instance);
    partial void InsertListLeaveRequest(ListLeaveRequest instance);
    partial void UpdateListLeaveRequest(ListLeaveRequest instance);
    partial void DeleteListLeaveRequest(ListLeaveRequest instance);
    #endregion
		
		public LeaveRequestDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["LeaveProjectConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LeaveRequestDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LeaveRequestDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LeaveRequestDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LeaveRequestDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Division> Divisions
		{
			get
			{
				return this.GetTable<Division>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<Holiday> Holidays
		{
			get
			{
				return this.GetTable<Holiday>();
			}
		}
		
		public System.Data.Linq.Table<Leave> Leaves
		{
			get
			{
				return this.GetTable<Leave>();
			}
		}
		
		public System.Data.Linq.Table<LeaveReport> LeaveReports
		{
			get
			{
				return this.GetTable<LeaveReport>();
			}
		}
		
		public System.Data.Linq.Table<Location> Locations
		{
			get
			{
				return this.GetTable<Location>();
			}
		}
		
		public System.Data.Linq.Table<Unit> Units
		{
			get
			{
				return this.GetTable<Unit>();
			}
		}
		
		public System.Data.Linq.Table<commentHistory> commentHistories
		{
			get
			{
				return this.GetTable<commentHistory>();
			}
		}
		
		public System.Data.Linq.Table<ListLeaveRequest> ListLeaveRequests
		{
			get
			{
				return this.GetTable<ListLeaveRequest>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Division")]
	public partial class Division : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Div_code;
		
		private string _Div_name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDiv_codeChanging(string value);
    partial void OnDiv_codeChanged();
    partial void OnDiv_nameChanging(string value);
    partial void OnDiv_nameChanged();
    #endregion
		
		public Division()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Div_code", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Div_code
		{
			get
			{
				return this._Div_code;
			}
			set
			{
				if ((this._Div_code != value))
				{
					this.OnDiv_codeChanging(value);
					this.SendPropertyChanging();
					this._Div_code = value;
					this.SendPropertyChanged("Div_code");
					this.OnDiv_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Div_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Div_name
		{
			get
			{
				return this._Div_name;
			}
			set
			{
				if ((this._Div_name != value))
				{
					this.OnDiv_nameChanging(value);
					this.SendPropertyChanging();
					this._Div_name = value;
					this.SendPropertyChanged("Div_name");
					this.OnDiv_nameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private int _SPV_ID;
		
		private string _Email;
		
		private string _Token;
		
		private string _Password;
		
		private System.Nullable<int> _Location_Code;
		
		private System.Nullable<System.DateTime> _Joined_date;
		
		private string _Gender;
		
		private string _Div_Code;
		
		private string _Unit_Code;
		
		private string _Staff_Level;
		
		private string _Job_Family;
		
		private string _Job_title;
		
		private System.Nullable<bool> _Expat;
		
		private System.Nullable<bool> _Contract;
		
		private System.Nullable<int> _Balance;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSPV_IDChanging(int value);
    partial void OnSPV_IDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnTokenChanging(string value);
    partial void OnTokenChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnLocation_CodeChanging(System.Nullable<int> value);
    partial void OnLocation_CodeChanged();
    partial void OnJoined_dateChanging(System.Nullable<System.DateTime> value);
    partial void OnJoined_dateChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnDiv_CodeChanging(string value);
    partial void OnDiv_CodeChanged();
    partial void OnUnit_CodeChanging(string value);
    partial void OnUnit_CodeChanged();
    partial void OnStaff_LevelChanging(string value);
    partial void OnStaff_LevelChanged();
    partial void OnJob_FamilyChanging(string value);
    partial void OnJob_FamilyChanged();
    partial void OnJob_titleChanging(string value);
    partial void OnJob_titleChanged();
    partial void OnExpatChanging(System.Nullable<bool> value);
    partial void OnExpatChanged();
    partial void OnContractChanging(System.Nullable<bool> value);
    partial void OnContractChanged();
    partial void OnBalanceChanging(System.Nullable<int> value);
    partial void OnBalanceChanged();
    #endregion
		
		public Employee()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPV_ID", DbType="Int NOT NULL")]
		public int SPV_ID
		{
			get
			{
				return this._SPV_ID;
			}
			set
			{
				if ((this._SPV_ID != value))
				{
					this.OnSPV_IDChanging(value);
					this.SendPropertyChanging();
					this._SPV_ID = value;
					this.SendPropertyChanged("SPV_ID");
					this.OnSPV_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(150)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Token", DbType="NVarChar(100)")]
		public string Token
		{
			get
			{
				return this._Token;
			}
			set
			{
				if ((this._Token != value))
				{
					this.OnTokenChanging(value);
					this.SendPropertyChanging();
					this._Token = value;
					this.SendPropertyChanged("Token");
					this.OnTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location_Code", DbType="Int")]
		public System.Nullable<int> Location_Code
		{
			get
			{
				return this._Location_Code;
			}
			set
			{
				if ((this._Location_Code != value))
				{
					this.OnLocation_CodeChanging(value);
					this.SendPropertyChanging();
					this._Location_Code = value;
					this.SendPropertyChanged("Location_Code");
					this.OnLocation_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Joined_date", DbType="Date")]
		public System.Nullable<System.DateTime> Joined_date
		{
			get
			{
				return this._Joined_date;
			}
			set
			{
				if ((this._Joined_date != value))
				{
					this.OnJoined_dateChanging(value);
					this.SendPropertyChanging();
					this._Joined_date = value;
					this.SendPropertyChanged("Joined_date");
					this.OnJoined_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="VarChar(10)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Div_Code", DbType="NVarChar(10)")]
		public string Div_Code
		{
			get
			{
				return this._Div_Code;
			}
			set
			{
				if ((this._Div_Code != value))
				{
					this.OnDiv_CodeChanging(value);
					this.SendPropertyChanging();
					this._Div_Code = value;
					this.SendPropertyChanged("Div_Code");
					this.OnDiv_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit_Code", DbType="NVarChar(10)")]
		public string Unit_Code
		{
			get
			{
				return this._Unit_Code;
			}
			set
			{
				if ((this._Unit_Code != value))
				{
					this.OnUnit_CodeChanging(value);
					this.SendPropertyChanging();
					this._Unit_Code = value;
					this.SendPropertyChanged("Unit_Code");
					this.OnUnit_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Staff_Level", DbType="NVarChar(50)")]
		public string Staff_Level
		{
			get
			{
				return this._Staff_Level;
			}
			set
			{
				if ((this._Staff_Level != value))
				{
					this.OnStaff_LevelChanging(value);
					this.SendPropertyChanging();
					this._Staff_Level = value;
					this.SendPropertyChanged("Staff_Level");
					this.OnStaff_LevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Job_Family", DbType="NVarChar(100)")]
		public string Job_Family
		{
			get
			{
				return this._Job_Family;
			}
			set
			{
				if ((this._Job_Family != value))
				{
					this.OnJob_FamilyChanging(value);
					this.SendPropertyChanging();
					this._Job_Family = value;
					this.SendPropertyChanged("Job_Family");
					this.OnJob_FamilyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Job_title", DbType="NVarChar(100)")]
		public string Job_title
		{
			get
			{
				return this._Job_title;
			}
			set
			{
				if ((this._Job_title != value))
				{
					this.OnJob_titleChanging(value);
					this.SendPropertyChanging();
					this._Job_title = value;
					this.SendPropertyChanged("Job_title");
					this.OnJob_titleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expat", DbType="Bit")]
		public System.Nullable<bool> Expat
		{
			get
			{
				return this._Expat;
			}
			set
			{
				if ((this._Expat != value))
				{
					this.OnExpatChanging(value);
					this.SendPropertyChanging();
					this._Expat = value;
					this.SendPropertyChanged("Expat");
					this.OnExpatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contract", DbType="Bit")]
		public System.Nullable<bool> Contract
		{
			get
			{
				return this._Contract;
			}
			set
			{
				if ((this._Contract != value))
				{
					this.OnContractChanging(value);
					this.SendPropertyChanging();
					this._Contract = value;
					this.SendPropertyChanged("Contract");
					this.OnContractChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Int")]
		public System.Nullable<int> Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this.OnBalanceChanging(value);
					this.SendPropertyChanging();
					this._Balance = value;
					this.SendPropertyChanged("Balance");
					this.OnBalanceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Holiday")]
	public partial class Holiday : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Holiday_Name;
		
		private System.Nullable<System.DateTime> _Hodilay_Date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnHoliday_NameChanging(string value);
    partial void OnHoliday_NameChanged();
    partial void OnHodilay_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnHodilay_DateChanged();
    #endregion
		
		public Holiday()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Holiday_Name", DbType="VarChar(100)")]
		public string Holiday_Name
		{
			get
			{
				return this._Holiday_Name;
			}
			set
			{
				if ((this._Holiday_Name != value))
				{
					this.OnHoliday_NameChanging(value);
					this.SendPropertyChanging();
					this._Holiday_Name = value;
					this.SendPropertyChanged("Holiday_Name");
					this.OnHoliday_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hodilay_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Hodilay_Date
		{
			get
			{
				return this._Hodilay_Date;
			}
			set
			{
				if ((this._Hodilay_Date != value))
				{
					this.OnHodilay_DateChanging(value);
					this.SendPropertyChanging();
					this._Hodilay_Date = value;
					this.SendPropertyChanged("Hodilay_Date");
					this.OnHodilay_DateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Leave")]
	public partial class Leave : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _LeaveType;
		
		private int _Entitlement;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnLeaveTypeChanging(string value);
    partial void OnLeaveTypeChanged();
    partial void OnEntitlementChanging(int value);
    partial void OnEntitlementChanged();
    #endregion
		
		public Leave()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveType", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string LeaveType
		{
			get
			{
				return this._LeaveType;
			}
			set
			{
				if ((this._LeaveType != value))
				{
					this.OnLeaveTypeChanging(value);
					this.SendPropertyChanging();
					this._LeaveType = value;
					this.SendPropertyChanged("LeaveType");
					this.OnLeaveTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Entitlement", DbType="Int NOT NULL")]
		public int Entitlement
		{
			get
			{
				return this._Entitlement;
			}
			set
			{
				if ((this._Entitlement != value))
				{
					this.OnEntitlementChanging(value);
					this.SendPropertyChanging();
					this._Entitlement = value;
					this.SendPropertyChanged("Entitlement");
					this.OnEntitlementChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LeaveReport")]
	public partial class LeaveReport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _LeaveReqID;
		
		private string _RequestorName;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<int> _DaysLeave;
		
		private string _LeaveType;
		
		private System.Nullable<System.DateTime> _SubmissionDate;
		
		private System.Nullable<bool> _Aprooved;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLeaveReqIDChanging(string value);
    partial void OnLeaveReqIDChanged();
    partial void OnRequestorNameChanging(string value);
    partial void OnRequestorNameChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnDaysLeaveChanging(System.Nullable<int> value);
    partial void OnDaysLeaveChanged();
    partial void OnLeaveTypeChanging(string value);
    partial void OnLeaveTypeChanged();
    partial void OnSubmissionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSubmissionDateChanged();
    partial void OnAproovedChanging(System.Nullable<bool> value);
    partial void OnAproovedChanged();
    #endregion
		
		public LeaveReport()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveReqID", DbType="NVarChar(150)")]
		public string LeaveReqID
		{
			get
			{
				return this._LeaveReqID;
			}
			set
			{
				if ((this._LeaveReqID != value))
				{
					this.OnLeaveReqIDChanging(value);
					this.SendPropertyChanging();
					this._LeaveReqID = value;
					this.SendPropertyChanged("LeaveReqID");
					this.OnLeaveReqIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestorName", DbType="NVarChar(50)")]
		public string RequestorName
		{
			get
			{
				return this._RequestorName;
			}
			set
			{
				if ((this._RequestorName != value))
				{
					this.OnRequestorNameChanging(value);
					this.SendPropertyChanging();
					this._RequestorName = value;
					this.SendPropertyChanged("RequestorName");
					this.OnRequestorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="Date")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaysLeave", DbType="Int")]
		public System.Nullable<int> DaysLeave
		{
			get
			{
				return this._DaysLeave;
			}
			set
			{
				if ((this._DaysLeave != value))
				{
					this.OnDaysLeaveChanging(value);
					this.SendPropertyChanging();
					this._DaysLeave = value;
					this.SendPropertyChanged("DaysLeave");
					this.OnDaysLeaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveType", DbType="NVarChar(50)")]
		public string LeaveType
		{
			get
			{
				return this._LeaveType;
			}
			set
			{
				if ((this._LeaveType != value))
				{
					this.OnLeaveTypeChanging(value);
					this.SendPropertyChanging();
					this._LeaveType = value;
					this.SendPropertyChanged("LeaveType");
					this.OnLeaveTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmissionDate", DbType="Date")]
		public System.Nullable<System.DateTime> SubmissionDate
		{
			get
			{
				return this._SubmissionDate;
			}
			set
			{
				if ((this._SubmissionDate != value))
				{
					this.OnSubmissionDateChanging(value);
					this.SendPropertyChanging();
					this._SubmissionDate = value;
					this.SendPropertyChanged("SubmissionDate");
					this.OnSubmissionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aprooved", DbType="Bit")]
		public System.Nullable<bool> Aprooved
		{
			get
			{
				return this._Aprooved;
			}
			set
			{
				if ((this._Aprooved != value))
				{
					this.OnAproovedChanging(value);
					this.SendPropertyChanging();
					this._Aprooved = value;
					this.SendPropertyChanged("Aprooved");
					this.OnAproovedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Location")]
	public partial class Location : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _LocationName;
		
		private int _Manager_ID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLocationNameChanging(string value);
    partial void OnLocationNameChanged();
    partial void OnManager_IDChanging(int value);
    partial void OnManager_IDChanged();
    #endregion
		
		public Location()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationName", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string LocationName
		{
			get
			{
				return this._LocationName;
			}
			set
			{
				if ((this._LocationName != value))
				{
					this.OnLocationNameChanging(value);
					this.SendPropertyChanging();
					this._LocationName = value;
					this.SendPropertyChanged("LocationName");
					this.OnLocationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manager_ID", DbType="Int NOT NULL")]
		public int Manager_ID
		{
			get
			{
				return this._Manager_ID;
			}
			set
			{
				if ((this._Manager_ID != value))
				{
					this.OnManager_IDChanging(value);
					this.SendPropertyChanging();
					this._Manager_ID = value;
					this.SendPropertyChanged("Manager_ID");
					this.OnManager_IDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Unit")]
	public partial class Unit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Unit_code;
		
		private string _Unit_name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUnit_codeChanging(string value);
    partial void OnUnit_codeChanged();
    partial void OnUnit_nameChanging(string value);
    partial void OnUnit_nameChanged();
    #endregion
		
		public Unit()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit_code", DbType="VarChar(10)")]
		public string Unit_code
		{
			get
			{
				return this._Unit_code;
			}
			set
			{
				if ((this._Unit_code != value))
				{
					this.OnUnit_codeChanging(value);
					this.SendPropertyChanging();
					this._Unit_code = value;
					this.SendPropertyChanged("Unit_code");
					this.OnUnit_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit_name", DbType="VarChar(100)")]
		public string Unit_name
		{
			get
			{
				return this._Unit_name;
			}
			set
			{
				if ((this._Unit_name != value))
				{
					this.OnUnit_nameChanging(value);
					this.SendPropertyChanging();
					this._Unit_name = value;
					this.SendPropertyChanged("Unit_name");
					this.OnUnit_nameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.commentHistory")]
	public partial class commentHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Action;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _Comment;
		
		private string _ProcessId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnActionChanging(string value);
    partial void OnActionChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnProcessIdChanging(string value);
    partial void OnProcessIdChanged();
    #endregion
		
		public commentHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action", DbType="NVarChar(100)")]
		public string Action
		{
			get
			{
				return this._Action;
			}
			set
			{
				if ((this._Action != value))
				{
					this.OnActionChanging(value);
					this.SendPropertyChanging();
					this._Action = value;
					this.SendPropertyChanged("Action");
					this.OnActionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessId", DbType="NVarChar(100)")]
		public string ProcessId
		{
			get
			{
				return this._ProcessId;
			}
			set
			{
				if ((this._ProcessId != value))
				{
					this.OnProcessIdChanging(value);
					this.SendPropertyChanging();
					this._ProcessId = value;
					this.SendPropertyChanged("ProcessId");
					this.OnProcessIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ListLeaveRequest")]
	public partial class ListLeaveRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ProcessId;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<int> _DaysLeave;
		
		private string _LeaveType;
		
		private System.Nullable<System.DateTime> _Submission;
		
		private string _status;
		
		private string _Email;
		
		private string _RecordId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProcessIdChanging(string value);
    partial void OnProcessIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnDaysLeaveChanging(System.Nullable<int> value);
    partial void OnDaysLeaveChanged();
    partial void OnLeaveTypeChanging(string value);
    partial void OnLeaveTypeChanged();
    partial void OnSubmissionChanging(System.Nullable<System.DateTime> value);
    partial void OnSubmissionChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnRecordIdChanging(string value);
    partial void OnRecordIdChanged();
    #endregion
		
		public ListLeaveRequest()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessId", DbType="NVarChar(150)")]
		public string ProcessId
		{
			get
			{
				return this._ProcessId;
			}
			set
			{
				if ((this._ProcessId != value))
				{
					this.OnProcessIdChanging(value);
					this.SendPropertyChanging();
					this._ProcessId = value;
					this.SendPropertyChanged("ProcessId");
					this.OnProcessIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="Date")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaysLeave", DbType="Int")]
		public System.Nullable<int> DaysLeave
		{
			get
			{
				return this._DaysLeave;
			}
			set
			{
				if ((this._DaysLeave != value))
				{
					this.OnDaysLeaveChanging(value);
					this.SendPropertyChanging();
					this._DaysLeave = value;
					this.SendPropertyChanged("DaysLeave");
					this.OnDaysLeaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveType", DbType="NVarChar(50)")]
		public string LeaveType
		{
			get
			{
				return this._LeaveType;
			}
			set
			{
				if ((this._LeaveType != value))
				{
					this.OnLeaveTypeChanging(value);
					this.SendPropertyChanging();
					this._LeaveType = value;
					this.SendPropertyChanged("LeaveType");
					this.OnLeaveTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Submission", DbType="Date")]
		public System.Nullable<System.DateTime> Submission
		{
			get
			{
				return this._Submission;
			}
			set
			{
				if ((this._Submission != value))
				{
					this.OnSubmissionChanging(value);
					this.SendPropertyChanging();
					this._Submission = value;
					this.SendPropertyChanged("Submission");
					this.OnSubmissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(50)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordId", DbType="NVarChar(50)")]
		public string RecordId
		{
			get
			{
				return this._RecordId;
			}
			set
			{
				if ((this._RecordId != value))
				{
					this.OnRecordIdChanging(value);
					this.SendPropertyChanging();
					this._RecordId = value;
					this.SendPropertyChanged("RecordId");
					this.OnRecordIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
